name: "publish-package"
description: "Publish an atopile package."
branding:
  icon: "package"
  color: "orange"

inputs:
  ato-config:
    description: "Path to the ato.yaml file."
    required: false
    default: ""

  atopile-version:
    description: "Version of atopile to use for publishing."
    required: false
    default: ""

  package-version:
    description: "Version of the package to publish. If empty, the version is expected in the ato.yaml file."
    required: true
    default: "from-tag"

  package-entrypoint:
    description: "A path (`path/to/package`) or entrypoint (`main.ato:App`) to the package to publish."
    required: true
    default: "./"

  skip-duplicate-versions:
    description: "Skip publishing if the version already exists"
    required: false
    default: "true"

  # You should probably use `package-entrypoint` instead.
  # Honestly, I'm not 100% sure why you'd need this, but I've missed it
  # from others' actions before, so I'm including it here in case you need it.
  working-directory:
    description: "Working directory to publish the package from"
    required: true
    default: "."

  registry:
    description: "Registry to publish the package to"
    required: true
    default: "https://packages.atopileapi.com"

# TODO: output the URL or the published package
# TODO: hash of the package

runs:
  using: "composite"
  steps:
    - uses: atopile/setup-atopile@v1
      with:
        atopile-version: ${{ inputs.atopile-version }}
        ato-config: ${{ inputs.ato-config }}

    - run: cd ${{ inputs.working-directory }} && ato package publish ${{ inputs.package-entrypoint }}
      shell: bash
      env:
        ATO_CLI_PACKAGE_VERSION: ${{ inputs.package-version }}
        ATO_CLI_PACKAGE_SKIP_DUPLICATE_VERSIONS: ${{ inputs.skip-duplicate-versions }}
        ATO_SERVICES_PACKAGES_URL: ${{ inputs.registry }} # envvar honored by the config, not specified by the CLI
        NONINTERACTIVE: 1
